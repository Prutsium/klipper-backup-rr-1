[server]
host: 0.0.0.0
port: 7125
enable_debug_logging: False
config_path: /home/pi/klipper_config

[authorization]
cors_domains:
    *://app.fluidd.xyz
    https://my.mainsail.xyz
    http://my.mainsail.xyz
    http://*.local
    http://*.lan
trusted_clients:
    10.0.0.0/8
    127.0.0.0/8
    169.254.0.0/16
    172.16.0.0/12
    192.168.0.0/16
    FE80::/10
    ::1/128

[timelapse]
enabled: True
##   If this set to False the Gcode macros are ignored and
##   the autorender is disabled at the end of the print.
##   The idea is to disable the plugin by default and only activate 
##   it during runtime via the http endpoint if a timelapse is desired.
autorender: True
##   If this is set to False, the autorender is disabled at the end of the print.
constant_rate_factor: 23
##   The range of the CRF scale is 0–51, where 0 is lossless,
##   23 is the default, and 51 is worst quality possible. 
##   A lower value generally leads to higher quality, and a 
##   subjectively sane range is 17–28.
##   more info: https://trac.ffmpeg.org/wiki/Encode/H.264
output_framerate: 25
##   Output framerate of the generated video
output_path: ~/timelapse/
##   Path where the generated video will be saved
frame_path: /tmp/timelapse/
##   Path where the temporary frames are saved
time_format_code: %Y%m%d_%H%M
##   Manipulates datetime format of the output filename
##   see: https://docs.python.org/3/library/datetime.html#strftime-and-strptime-format-codes
snapshoturl: http://192.168.98.136/?action=snapshot
##   url to your webcamstream
pixelformat: yuv420p
##   set pixelformat for output video
##   default to yuv420p because eg. yuvj422p will not play on 
##   on most smartphones or older media players
#extraoutputparams: 
##   here you can extra output parameters to FFMPEG 
##   further info: https://ffmpeg.org/ffmpeg.html 
##   eg rotate video by 180° "-vf transpose=2,transpose=2"
##   or repeat last frame for 5 seconds:
##   -filter_complex "[0]trim=0:5[hold];[0][hold]concat[extended];[extended][0]overlay"

[mqtt]
address: 192.168.99.5
port: 1883
mqtt_protocol: v3.1.1
enable_moonraker_api: True
instance_name: ratrig
default_qos: 0

# enables partial support of Octoprint API
[octoprint_compat]

# enables moonraker to track and store print history.
[history]

# this enables moonraker's update manager
[update_manager]

[update_manager client v-coreos]
type: git_repo
path: /home/pi/klipper_config/config
origin: https://github.com/Rat-OS/ratos-configuration.git
install_script: /home/pi/klipper_config/config/scripts/ratos-install.sh

[update_manager client MoonCord]
type: git_repo
path: /home/pi/mooncord
origin: https://github.com/eliteschwein/mooncord.git
install_script: scripts/install.sh
enable_node_updates: True

[update_manager client moonraker-telegram-bot]
type: git_repo
path: ~/moonraker-telegram-bot
origin: https://github.com/nlef/moonraker-telegram-bot.git
env: ~/moonraker-telegram-bot-env/bin/python
requirements: scripts/requirements.txt
install_script: scripts/install.sh

[update_manager client mainsail]
type: web
repo: meteyou/mainsail
path: ~/mainsail

# enables fluidd updates
[update_manager client fluidd]
type: web
repo: cadriel/fluidd
path: ~/fluidd
persistent_files:
    config.json
    logo_v-coreos.svg

[power printer]
type: tasmota
address: 192.168.98.172
password: